Microsoft (R) Macro Assembler Version 6.15.8803		    10/19/05 15:05:36
mcircles.asm						     Page 1 - 1


				;  CSC218
				;  Assignment #10

				; -----
				;  PROVIDED MAIN

				;  DO NOT EDIT THIS FILE!!
				;  Independently assembly this file and link
				;   with the file that contains the procedures.

				;  Refer to class handouts for details on linking
				;  multiple sourse files.


				; -----
				;  Procedure called by main:

				;  * Procedure: get_arg
				;	Gets, checks, and returns command line argument.

				;  * Procedure: rand
				;	Generates randum number (up to MAX)

				;  * Procedure: draw_border
				;	Draws a 3 pixel wide border around screen.

				;  * Procedure: draw_circle
				;	Draws a circle using provided algorithm.


				; ---------------------------------------
				;  Simple macro to increment/change color variable.
				;  Kinda ugly code...

				inc_color	MACRO	clr
					local	nxt1, nxt2, nxt3, nxt4, color_done

					cmp	clr, BLUE
					jne	nxt1
					mov	clr, GREEN
					jmp	color_done
				nxt1:	cmp	clr, GREEN
					jne	nxt2
					mov	clr, RED
					jmp	color_done
				nxt2:	cmp	clr, RED
					jne	nxt3
					mov	clr, YELLOW
					jmp	color_done
				nxt3:	cmp	clr, YELLOW
					jne	nxt4
					mov	clr, WHITE
					jmp	color_done
				nxt4:	cmp	clr, WHITE
					jne	color_done
					mov	clr, BLUE
				color_done:

				endm


				.model	small
				.486


				; ------------------------------------------------------------

 0000				.data

				; -----
				;  Define constants for main program.

 = 0012				VID_MODE	equ	12h
 = 0280				SCR_WIDTH	equ	640
 = 01E0				SCR_HEIGHT	equ	480

 = 0001				BLUE		equ	1
 = 0002				GREEN		equ	2
 = 0004				RED		equ	4
 = 000E				YELLOW		equ	14
 = 000F				WHITE		equ	15

 = 000F				MIN_RADIUS	equ	15
 = 0032				MAX_RADIUS	equ	50


				; -----
				;  Define variables for main program.

 0000 0000			circle_cnt	dw	?			; count of circles to draw

 0002 0000			x_center	dw	?			; circle center, x pos
 0004 0000			y_center	dw	?			; circle center, y pos
 0006 0000			radius		dw	?			; circle radius
 0008 01			color		db	BLUE			; circle color


				; ------------------------------------------------------------

				.stack

 0000				.code

				extrn	get_arg:near
				extrn	draw_border:near
				extrn	rand:near
				extrn	draw_circle:near


 0000				main	proc	far
 0000  B8 ---- R			mov	ax, @data
 0003  8E D8				mov	ds, ax

				; -----
				;  Get command line argument.
				;  Note, if command line argument is invalid, "get_arg"
				;        will display error message and terminate program.

				;  The "get_args" procedure read the command line argument,
				;  checks for errors, and converts to integer.  Returns the
				;  single integer number of circles to draw.

 0005  8D 06 0000 R			lea	ax, circle_cnt
 0009  50				push	ax
 000A  E8 0000 E			call	get_arg

				; -----
				;  Set-up and switch to video mode.

 000D  B8 0012				mov	ax, VID_MODE
 0010  CD 10				int	10h

				; -----
				;  Draw border around screen (3-wide).

 0012  B8 0280				mov	ax, SCR_WIDTH
 0015  50				push	ax				; border/screen width
 0016  B8 01E0				mov	ax, SCR_HEIGHT
 0019  50				push	ax				; border/screen height
 001A  B8 0002				mov	ax, GREEN
 001D  50				push	ax				; border color
 001E  E8 0000 E			call	draw_border


				; -----
				;  Obtain randum number for radius.
				;  Procedure "rand" generates randum number between 0 and MAX-1.
				;  If radius too small, try again...

 0021  8B 0E 0000 R			mov	cx, circle_cnt

 0025				re_draw:
 0025  8D 06 0006 R			lea	ax, radius
 0029  50				push	ax				; randon number
 002A  B8 0032				mov	ax, MAX_RADIUS
 002D  50				push	ax				; MAX value
 002E  E8 0000 E			call	rand

 0031  83 3E 0006 R 0F			cmp	radius, MIN_RADIUS
 0036  7C ED				jl	re_draw

				; -----
				;  Obtain randum number for circle center, x position.
				;  Procedure "rand" generates randum number between 0 and MAX-1.
				;  If x position too small, try again...

 0038				new_x_center:
 0038  8D 06 0002 R			lea	ax, x_center
 003C  50				push	ax
 003D  B8 0280				mov	ax, 640
 0040  83 E8 32				sub	ax, MAX_RADIUS
 0043  50				push	ax
 0044  E8 0000 E			call	rand

 0047  83 3E 0002 R 32			cmp	x_center, MAX_RADIUS
 004C  7C EA				jl	new_x_center

				; -----
				;  Obtain randum number for circle center, y position.
				;  Procedure "rand" generates randum number between 0 and MAX-1.
				;  If radius too small, try again...
				;  If y position too small, try again...

 004E				new_y_center:
 004E  8D 06 0004 R			lea	ax, y_center
 0052  50				push	ax
 0053  B8 01E0				mov	ax, 480
 0056  83 E8 32				sub	ax, MAX_RADIUS
 0059  50				push	ax
 005A  E8 0000 E			call	rand
 005D  83 3E 0004 R 32			cmp	y_center, MAX_RADIUS
 0062  7C EA				jl	new_y_center

				; -----
				;  Change color of circle.

					inc_color	color
 0064  80 3E 0008 R 01	     1		cmp	color, BLUE
 0069  75 07		     1		jne	??0000
 006B  C6 06 0008 R 02	     1		mov	color, GREEN
 0070  EB 36		     1		jmp	??0004
 0072  80 3E 0008 R 02	     1	??0000:	cmp	color, GREEN
 0077  75 07		     1		jne	??0001
 0079  C6 06 0008 R 04	     1		mov	color, RED
 007E  EB 28		     1		jmp	??0004
 0080  80 3E 0008 R 04	     1	??0001:	cmp	color, RED
 0085  75 07		     1		jne	??0002
 0087  C6 06 0008 R 0E	     1		mov	color, YELLOW
 008C  EB 1A		     1		jmp	??0004
 008E  80 3E 0008 R 0E	     1	??0002:	cmp	color, YELLOW
 0093  75 07		     1		jne	??0003
 0095  C6 06 0008 R 0F	     1		mov	color, WHITE
 009A  EB 0C		     1		jmp	??0004
 009C  80 3E 0008 R 0F	     1	??0003:	cmp	color, WHITE
 00A1  75 05		     1		jne	??0004
 00A3  C6 06 0008 R 01	     1		mov	color, BLUE
 00A8			     1	??0004:

				; -----
				;  Draw a circle.

 00A8  FF 36 0002 R			push	x_center
 00AC  FF 36 0004 R			push	y_center
 00B0  FF 36 0006 R			push	radius
 00B4  A0 0008 R			mov	al, color
 00B7  98				cbw
 00B8  50				push	ax
 00B9  E8 0000 E			call	draw_circle

				; -----
				;  Loop

 00BC  49				dec	cx			; "loop re_draw"
 00BD  83 F9 00				cmp	cx, 0
 00C0  7E 03				jle	lp_done
 00C2  E9 FF60				jmp	re_draw
 00C5				lp_done:


				; -----
				;  Circle drawn, wait for user input before exiting
				;   graphics mode and returning.

 00C5  B4 07				mov	ah, 07			; Pause, wait for key press
 00C7  CD 21				int	21h

 00C9  B8 0003				mov	ax, 03h
 00CC  CD 10				int	10h

				; -----
				;  Done, terminate program.

 00CE				last:
 00CE  B4 4C				mov	ah, 4ch
 00D0  CD 21				int	21h

 00D2				main	endp


				; --------------------------------------------------------------

				end	main
Microsoft (R) Macro Assembler Version 6.15.8803		    10/19/05 15:05:36
mcircles.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

inc_color  . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 0009	  Word	  Public  'DATA'	
STACK  . . . . . . . . . . . . .	16 Bit	 0400	  Para	  Stack	  'STACK'	 
_TEXT  . . . . . . . . . . . . .	16 Bit	 00D2	  Word	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

main . . . . . . . . . . . . . .	P Far	 0000	  _TEXT	Length= 00D2 Public
  re_draw  . . . . . . . . . . .	L Near	 0025	  _TEXT	
  new_x_center . . . . . . . . .	L Near	 0038	  _TEXT	
  new_y_center . . . . . . . . .	L Near	 004E	  _TEXT	
  ??0000 . . . . . . . . . . . .	L Near	 0072	  _TEXT	
  ??0001 . . . . . . . . . . . .	L Near	 0080	  _TEXT	
  ??0002 . . . . . . . . . . . .	L Near	 008E	  _TEXT	
  ??0003 . . . . . . . . . . . .	L Near	 009C	  _TEXT	
  ??0004 . . . . . . . . . . . .	L Near	 00A8	  _TEXT	
  lp_done  . . . . . . . . . . .	L Near	 00C5	  _TEXT	
  last . . . . . . . . . . . . .	L Near	 00CE	  _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
BLUE . . . . . . . . . . . . . .	Number	 0001h	 
GREEN  . . . . . . . . . . . . .	Number	 0002h	 
MAX_RADIUS . . . . . . . . . . .	Number	 0032h	 
MIN_RADIUS . . . . . . . . . . .	Number	 000Fh	 
RED  . . . . . . . . . . . . . .	Number	 0004h	 
SCR_HEIGHT . . . . . . . . . . .	Number	 01E0h	 
SCR_WIDTH  . . . . . . . . . . .	Number	 0280h	 
VID_MODE . . . . . . . . . . . .	Number	 0012h	 
WHITE  . . . . . . . . . . . . .	Number	 000Fh	 
YELLOW . . . . . . . . . . . . .	Number	 000Eh	 
circle_cnt . . . . . . . . . . .	Word	 0000	  _DATA	
color  . . . . . . . . . . . . .	Byte	 0008	  _DATA	
draw_border  . . . . . . . . . .	L Near	 0000	  _TEXT	External
draw_circle  . . . . . . . . . .	L Near	 0000	  _TEXT	External
get_arg  . . . . . . . . . . . .	L Near	 0000	  _TEXT	External
radius . . . . . . . . . . . . .	Word	 0006	  _DATA	
rand . . . . . . . . . . . . . .	L Near	 0000	  _TEXT	External
x_center . . . . . . . . . . . .	Word	 0002	  _DATA	
y_center . . . . . . . . . . . .	Word	 0004	  _DATA	

	   0 Warnings
	   0 Errors
