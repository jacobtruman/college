Microsoft (R) Macro Assembler Version 6.15.8803		    10/25/05 12:08:59
proc.asm						     Page 1 - 1


				;   Jacob Truman Section 02
				;   Assignment 11

				.model small
				.486

				;- Data -
 0000				.data

				;-------------
				;- Constants -
				;-------------

 = 000D				CR			equ	13			; ASCII carrige return
 = 000A				LF			equ	10			; ASCII line feed
 = 0024				END_STR		equ	"$"			; Service 09, string term

				;----------------------------------------------------
 0000 0000			psp		dw	?
 0002 000A			ten		dw	10
 0004 0A			bten		db	10
 0005 00			len		db	0
 0006  0050 [			chrs	db	80 dup (?)
        00
       ]
 0056  0015 [			mydta  	db	21 dup(?)
        00
       ]
 006B 00			f_att	db	?			; Attribute of file found
 006C 0000			f_time	dw	?			; Time stamp of file
 006E 0000			f_date	dw	?			; Date stamp of file
 0070 00000000			f_size	dd	?			; file size in bytes
 0074  000D [			f_name	db	13 dup (?)		; file name and ext
        00
       ]
 0081 0000			f_hand	dw	?

 0083 0000			year	dw	0
 0085 0000			month	dw	0
 0087 0000			date	dw	0

				;-----------
				;- Strings -
				;-----------

				; file name and ext print string
 0089  0014 [			print_name	db	20 dup (?)
        00
       ]
 009D  00 24						db	?, END_STR

				; print date print string
 009F 00 00 2F 00 00 2F		print_date	db	?, ?, "/", ?, ?, "/", ?, ?, ?, ?, END_STR
       00 00 00 00 24
 00AA 0D 0A 24			newline		db	CR, LF, END_STR


 00AD 0D 0A 49 6E 76 61		msg1	db	CR, LF, "Invalid command line argument"
       6C 69 64 20 63 6F
       6D 6D 61 6E 64 20
       6C 69 6E 65 20 61
       72 67 75 6D 65 6E
       74
 00CC  0D 0A 24					db	CR, LF, END_STR
 00CF 0D 0A 45 72 72 6F		msg2	db	CR, LF, "Error when opening file"
       72 20 77 68 65 6E
       20 6F 70 65 6E 69
       6E 67 20 66 69 6C
       65
 00E8  0D 0A 24					db	CR, LF, END_STR

				;- Code -
 0000				.code

				;--------------------------------
				;- Get command line information -
				;--------------------------------

 0000				get_cli	proc	near
 0000  55			push bp
 0001  8B EC			mov  bp, sp
 0003  50			push ax
 0004  53			push bx
 0005  51			push cx
 0006  52			push dx
 0007  56			push si
 0008  57			push di
 0009  06			push es

				;-----------------------------------
				;- Get the PSP address from system -
				;-----------------------------------
 000A  B4 51				mov	ah, 51h
 000C  CD 21				int	21h
 000E  89 1E 0000 R			mov	psp, bx

				;------------------------------------
				;- See if proper chars were entered -
				;------------------------------------

 0012  A1 0000 R			mov	ax, psp
 0015  8E C0				mov	es, ax			; set ES to PSP addr

 0017  26: A0 0080			mov	al, byte ptr es:0080h	; number of chars entered

 001B  3C 00				cmp	al, 0			; if 0 entered, print a message
 001D  7E 56				jle	do_no_msg

 001F  8D 1E 0006 R			lea	bx, chrs
 0023  BE 0081				mov	si, 81h
					
 0026				spaces_lp:
 0026  26: 8A 04			mov  al, byte ptr es:[si]
 0029  3C 20				cmp  al, 20h	; space
 002B  75 02				jne  chk_slash
 002D  EB 23				jmp  spaces_next
 002F						chk_slash:
 002F  3C 2F						cmp  al, 2fh	; /
 0031  74 02						je   chk_let
 0033  EB 40						jmp  do_no_msg
 0035						chk_let:
 0035  46						inc  si
 0036  26: 8A 04					mov  al, byte ptr es:[si]
 0039  3C 76						cmp  al, 76h	; v
 003B  74 06						je   chk_spc
 003D  3C 73						cmp  al, 73h	; s
 003F  74 02						je   chk_spc
 0041  EB 32						jmp  do_no_msg
 0043						chk_spc:
 0043  8B 5E 04						mov  bx, word ptr 4[bp]
 0046  88 07						mov	 byte ptr [bx], al
 0048  46						inc  si
 0049  26: 8A 04					mov  al, byte ptr es:[si]
 004C  3C 20						cmp  al, 20h	; space
 004E  74 05						je   chk_spcs
 0050  EB 23						jmp  do_no_msg

 0052						spaces_next:
 0052  46				inc	 si
 0053  EB D1				jmp  spaces_lp
					
 0055					chk_spcs:
 0055  26: 8A 04				mov  al, byte ptr es:[si]
 0058  3C 20					cmp  al, 20h	; space
 005A  75 03					jne  end_spcs
 005C  46					inc  si
 005D  EB F6					jmp  chk_spcs

 005F				end_spcs:

				;-----------------------------------
				;- Copy chars to the data segement -
				;-----------------------------------

 005F  8B 5E 06				mov  bx, word ptr 6[bp]
 0062					cp_chars:
 0062  26: 8A 04				mov  al, byte ptr es:[si]
 0065  3C 0D					cmp  al, CR
 0067  74 18					je   end_get_arg
 0069  88 07					mov	 byte ptr [bx], al
 006B  FE 06 0005 R				inc  len
 006F  43					inc  bx
 0070  46					inc  si  
 0071  EB EF					jmp  cp_chars

 0073  EB 0C				jmp	end_get_arg		; done...


				;-----------------------------------------------------------
				;- No characters entered on command line, so print message -
				;-----------------------------------------------------------

 0075				do_no_msg:
 0075  B4 09				mov	ah, 09h
 0077  8D 16 00AD R			lea	dx, msg1
 007B  CD 21				int	21h

 007D  B4 4C				mov	ah, 4ch
 007F  CD 21				int	21h

 0081				end_get_arg:

 0081  07			pop  es
 0082  5F			pop  di
 0083  5E			pop  si
 0084  5A			pop  dx
 0085  59			pop  cx
 0086  5B			pop  bx
 0087  58			pop  ax
 0088  5D			pop  bp

 0089  C2 0004			ret  4

 008C				get_cli	endp


				;------------------------------------
				;- Get, display, and set file dates -
				;------------------------------------

 008C				disp_files	proc	near
 008C  55			push bp
 008D  8B EC			mov  bp, sp
 008F  50			push ax
 0090  53			push bx
 0091  51			push cx
 0092  52			push dx

 0093  B4 1A			mov ah, 1ah
 0095  8D 16 0056 R		lea dx, mydta
 0099  CD 21			int 21h

 009B  B4 4E			mov	ah, 4eh
 009D  B9 0000			mov	cx, 0
 00A0  8B 56 06			mov dx, word ptr 6[bp]
 00A3  CD 21			int	21h
 00A5  0F 82 0107		jc err_on_open

 00A9				get_next:

				;- Get year
 00A9  A1 006E R			mov	 ax, f_date
 00AC  B1 09				mov	 cl, 9
 00AE  D3 E8				shr	 ax, cl
 00B0  05 07BC				add	 ax, 1980
 00B3  A3 0083 R			mov	 year, ax
 00B6  F6 36 0004 R				div  bten
 00BA  04 30					add  al, 30h
 00BC  80 C4 30					add  ah, 30h
 00BF  88 26 00A8 R			mov  9[print_date], ah
 00C3  F6 26 0004 R				mul  bten
 00C7  F6 36 0004 R				div  bten
 00CB  04 30					add  al, 30h
 00CD  80 C4 30					add  ah, 30h
 00D0  88 26 00A7 R			mov  8[print_date], ah
 00D4  F6 26 0004 R				mul  bten
 00D8  F6 36 0004 R				div  bten
 00DC  04 30					add  al, 30h
 00DE  80 C4 30					add  ah, 30h
 00E1  88 26 00A6 R			mov  7[print_date], ah
 00E5  F6 26 0004 R				mul  bten
 00E9  F6 36 0004 R				div  bten
 00ED  04 30					add  al, 30h
 00EF  80 C4 30					add  ah, 30h
 00F2  88 26 00A5 R			mov  6[print_date], ah
					

				;- Get month
 00F6  A1 006E R			mov	 ax, f_date
 00F9  B1 05				mov	 cl, 5
 00FB  D3 E8				shr	 ax, cl
 00FD  83 E0 0F				and	 ax, 000fh
 0100  A3 0085 R			mov	 month, ax
 0103  F6 36 0004 R				div  bten
 0107  04 30					add  al, 30h
 0109  80 C4 30					add  ah, 30h
 010C  A2 009F R			mov  [print_date], al
 010F  88 26 00A0 R			mov  1[print_date], ah

				;- Get date
 0113  A1 006E R			mov	 ax, f_date
 0116  83 E0 1F				and	 ax, 001fh
 0119  A3 0087 R	mov	 date, ax
 011C  F6 36 0004 R				div  bten
 0120  04 30					add  al, 30h
 0122  80 C4 30					add  ah, 30h
 0125  A2 00A2 R			mov  3[print_date], al
 0128  88 26 00A3 R			mov  4[print_date], ah

				;- open file
 012C  B4 3D				mov  ah, 3dh
 012E  B0 02				mov  al, 2
 0130  8D 16 0074 R			lea  dx, f_name
 0134  CD 21				int  21h
 0136  72 78				jc   err_on_open
 0138  A3 0081 R			mov  f_hand, ax   ; file handle
					
 013B  8D 1E 0074 R			lea  bx, f_name
 013F  BE 0000				mov  si, 0
 0142					nm_lp:
 0142  8A 00					mov  al, byte ptr[si][bx]
 0144  88 84 0089 R				mov  [si][print_name], al
 0148  46					inc  si
 0149  3C 00					cmp  al, 0
 014B  74 02					je   nm_end
 014D  EB F3					jmp  nm_lp
						
 014F					nm_end:		
 014F  B4 09					mov	 ah, 09h
 0151  8D 16 0089 R				lea	 dx, print_name
 0155  CD 21					int	 21h

 0157  8B 56 04					mov dx, word ptr 4[bp]
 015A  83 FA 73					cmp  dx, 73h
 015D  74 08					je   skp_dt
 015F  B4 09					mov	 ah, 09h
 0161  8D 16 009F R				lea	 dx, print_date
 0165  CD 21					int	 21h
 0167						skp_dt:
						
 0167  B4 09					mov	 ah, 09h
 0169  8D 16 00AA R				lea	 dx, newline
 016D  CD 21					int	 21h

				;- get today
 016F  B4 2A				mov ah, 2ah
 0171  CD 21				int 21h

				;- Set year
 0173  B8 0000				mov ax, 0
 0176  81 E9 07BC			sub cx, 1980
 017A  C1 E1 09				shl cx, 9   ; shift left 9 places
 017D  0B C1				or  ax, cx

				;- Set month
 017F  B9 0000				mov cx, 0
 0182  8A CE				mov cl, dh
 0184  C1 E1 05				shl cx, 5   ; shift left 5 places
 0187  0B C1				or  ax, cx
 0189  B6 00				mov dh, 0
 018B  0B C2				or  ax, dx

				;- Set date
 018D  8B D0				mov dx, ax
 018F  B4 57				mov ah, 57h
 0191  B0 01				mov al, 1
 0193  8B 1E 0081 R			mov bx, f_hand
 0197  8B 0E 006C R			mov cx, f_time
 019B  CD 21				int 21h
 019D  72 11				jc err_on_open

 019F  B4 3E			mov ah, 3eh   ; close file
 01A1  8B 1E 0081 R		mov bx, f_hand
 01A5  CD 21			int 21h

				;----------------------------------
				; find next
 01A7  B4 4F				mov ah, 4fh
 01A9  CD 21				int 21h
 01AB  72 0F				jc f_done
 01AD  E9 FEF9				jmp get_next

 01B0				err_on_open:
 01B0  B4 09				mov	ah, 09h
 01B2  8D 16 00CF R			lea	dx, msg2
 01B6  CD 21				int	21h

 01B8  B4 4C				mov	ah, 4ch
 01BA  CD 21				int	21h
					
 01BC				f_done:

 01BC  5A			pop  dx
 01BD  59			pop  cx
 01BE  5B			pop  bx
 01BF  58			pop  ax
 01C0  5D			pop  bp

 01C1  C2 0004			ret  4

 01C4				disp_files	endp


				; Note, use end with no entry point.
				end
Microsoft (R) Macro Assembler Version 6.15.8803		    10/25/05 12:08:59
proc.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 00EB	  Word	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	16 Bit	 01C4	  Word	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

disp_files . . . . . . . . . . .	P Near	 008C	  _TEXT	Length= 0138 Public
  get_next . . . . . . . . . . .	L Near	 00A9	  _TEXT	
  nm_lp  . . . . . . . . . . . .	L Near	 0142	  _TEXT	
  nm_end . . . . . . . . . . . .	L Near	 014F	  _TEXT	
  skp_dt . . . . . . . . . . . .	L Near	 0167	  _TEXT	
  err_on_open  . . . . . . . . .	L Near	 01B0	  _TEXT	
  f_done . . . . . . . . . . . .	L Near	 01BC	  _TEXT	
get_cli  . . . . . . . . . . . .	P Near	 0000	  _TEXT	Length= 008C Public
  spaces_lp  . . . . . . . . . .	L Near	 0026	  _TEXT	
  chk_slash  . . . . . . . . . .	L Near	 002F	  _TEXT	
  chk_let  . . . . . . . . . . .	L Near	 0035	  _TEXT	
  chk_spc  . . . . . . . . . . .	L Near	 0043	  _TEXT	
  spaces_next  . . . . . . . . .	L Near	 0052	  _TEXT	
  chk_spcs . . . . . . . . . . .	L Near	 0055	  _TEXT	
  end_spcs . . . . . . . . . . .	L Near	 005F	  _TEXT	
  cp_chars . . . . . . . . . . .	L Near	 0062	  _TEXT	
  do_no_msg  . . . . . . . . . .	L Near	 0075	  _TEXT	
  end_get_arg  . . . . . . . . .	L Near	 0081	  _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
CR . . . . . . . . . . . . . . .	Number	 000Dh	 
END_STR  . . . . . . . . . . . .	Number	 0024h	 
LF . . . . . . . . . . . . . . .	Number	 000Ah	 
bten . . . . . . . . . . . . . .	Byte	 0004	  _DATA	
chrs . . . . . . . . . . . . . .	Byte	 0006	  _DATA	
date . . . . . . . . . . . . . .	Word	 0087	  _DATA	
f_att  . . . . . . . . . . . . .	Byte	 006B	  _DATA	
f_date . . . . . . . . . . . . .	Word	 006E	  _DATA	
f_hand . . . . . . . . . . . . .	Word	 0081	  _DATA	
f_name . . . . . . . . . . . . .	Byte	 0074	  _DATA	
f_size . . . . . . . . . . . . .	DWord	 0070	  _DATA	
f_time . . . . . . . . . . . . .	Word	 006C	  _DATA	
len  . . . . . . . . . . . . . .	Byte	 0005	  _DATA	
month  . . . . . . . . . . . . .	Word	 0085	  _DATA	
msg1 . . . . . . . . . . . . . .	Byte	 00AD	  _DATA	
msg2 . . . . . . . . . . . . . .	Byte	 00CF	  _DATA	
mydta  . . . . . . . . . . . . .	Byte	 0056	  _DATA	
newline  . . . . . . . . . . . .	Byte	 00AA	  _DATA	
print_date . . . . . . . . . . .	Byte	 009F	  _DATA	
print_name . . . . . . . . . . .	Byte	 0089	  _DATA	
psp  . . . . . . . . . . . . . .	Word	 0000	  _DATA	
ten  . . . . . . . . . . . . . .	Word	 0002	  _DATA	
year . . . . . . . . . . . . . .	Word	 0083	  _DATA	

	   0 Warnings
	   0 Errors
